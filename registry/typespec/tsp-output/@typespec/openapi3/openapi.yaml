openapi: 3.0.0
info:
  title: xregistry
  version: 0.0.1
tags:
  - name: Groups
  - name: Resources
paths:
  /groups:
    get:
      tags:
        - Groups
      operationId: Groups_list
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupReadItem'
                    x-typespec-name: Group[]
                    description: List of elements
                  nextLink:
                    type: string
                    format: uri
                    description: A link to the next page of results if present.
                required:
                  - value
                x-typespec-name: List<Group>
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups/{groupId}/resources:
    get:
      tags:
        - Resources
      operationId: Resources_list
      parameters:
        - $ref: '#/components/parameters/GroupPathId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/RegistryResourceReadItem'
                    x-typespec-name: RegistryResource[]
                    description: List of elements
                  nextLink:
                    type: string
                    format: uri
                    description: A link to the next page of results if present.
                required:
                  - value
                x-typespec-name: List<RegistryResource>
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups/{groupId}/resources/{id}:
    get:
      tags:
        - Resources
      operationId: Resources_read
      parameters:
        - $ref: '#/components/parameters/GroupPathId'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryResourceRead'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Resources
      operationId: Resources_create
      parameters:
        - $ref: '#/components/parameters/GroupPathId'
        - name: id
          in: path
          required: true
          description: A unique identifier of the entity.
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryResourceRead'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistryResource'
    patch:
      tags:
        - Resources
      operationId: Resources_update
      parameters:
        - $ref: '#/components/parameters/GroupPathId'
        - $ref: '#/components/parameters/RegistryResource.id'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryResourceRead'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    A human readable name of the entity. Note that
                    implementations MAY choose to enforce constraints on this
                    value. For example, they could mandate that id and name be
                    the same value. How any such requirement is shared with all
                    parties is out of scope of this specification.
                description:
                  type: string
                  description: A human readable summary of the purpose of the entity.
                tags:
                  type: array
                  items:
                    $ref: '#/components/schemas/RegistryTag'
                  x-typespec-name: RegistryTag[]
                  description: >-
                    A mechanism in which additional metadata about the entity
                    can be stored without changing the schema of the entity.
                version:
                  type: integer
                  format: int32
                  description: >-
                    A numeric value representing a specific instance of an
                    entity. Note that versions of an entity can be modified
                    without changing the version value. Often this value, or
                    when a new version is created, is controlled by a user of
                    the Registry.
                epoch:
                  type: integer
                  format: int64
                  description: >-
                    A numeric value used to determine whether an entity has been
                    modified. Each time the associated entity is updated, this
                    value MUST be set to a new value that is greater than the
                    current one. Note that unlike version, this attribute is
                    most often managed by the Registry itself. Additionally, if
                    an entity is created that is based on another entity (e.g. a
                    new version of an entity is created), then the new entity's
                    `epoch` value can be reset (e.g. to zero) since the scope of
                    its values is the entity.
                self:
                  type: string
                  format: uri
                  description: >-
                    A unique URL for the entity. The URL MUST be a combination
                    of the base URL for the list of resources of this type of
                    entity appended with the id of the entity.
                createdBy:
                  type: string
                  description: >-
                    A reference to the user or component that was responsible
                    for the creation of this entity. This specification makes no
                    requirement on the semantics or syntax of this value.
                createdOn:
                  type: string
                  format: date-time
                  description: The date/time of when the entity was created.
                modifiedBy:
                  type: string
                  description: >-
                    A reference to the user or component that was responsible
                    for the the latest update of this entity. This specification
                    makes no requirement on the semantics or syntax of this
                    value
                modifiedOn:
                  type: string
                  format: date-time
                  description: The date/time of when the entity was last updated.
                docs:
                  type: string
                  description: >-
                    A URI-Reference to additional documentation about this
                    entity. This specification does not place any constraints on
                    the data returned from an HTTP GET to this value.
              x-typespec-name: Patch<RegistryResource>
    delete:
      tags:
        - Resources
      operationId: Resources_delete
      parameters:
        - $ref: '#/components/parameters/GroupPathId'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: >-
            There is no content to send for this request, but the headers may be
            useful. 
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups/{id}:
    get:
      tags:
        - Groups
      operationId: Groups_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRead'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Groups
      operationId: Groups_create
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRead'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateOrUpdate'
    patch:
      tags:
        - Groups
      operationId: Groups_update
      parameters:
        - $ref: '#/components/parameters/Group.id'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRead'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                resources:
                  type: array
                  items:
                    $ref: '#/components/schemas/RegistryResourceUpdateItem'
                  x-typespec-name: RegistryResource[]
              x-typespec-name: Patch<Group>
    delete:
      tags:
        - Groups
      operationId: Groups_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: >-
            There is no content to send for this request, but the headers may be
            useful. 
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /registryMetdata:
    get:
      operationId: RegistryMetadataInterface_read
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryMetadata'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  parameters:
    Group.id:
      name: id
      in: path
      required: true
      schema:
        type: string
    GroupPathId:
      name: groupId
      in: path
      required: true
      schema:
        type: string
    RegistryResource.id:
      name: id
      in: path
      required: true
      description: A unique identifier of the entity.
      schema:
        type: string
  schemas:
    CommonMetadata:
      type: object
      properties:
        singlular:
          type: string
        plural:
          type: string
        schema:
          type: string
          format: uri
        resources:
          type: array
          items: {}
          x-typespec-name: '[CommonMetadata]'
      required:
        - singlular
        - plural
    Error:
      type: object
      properties:
        code:
          type: string
          description: A server-defined code that uniquely identifies the error.
        error:
          allOf:
            - $ref: '#/components/schemas/ErrorDetail'
          description: Top-level error object
      description: Error response
      required:
        - code
        - error
    ErrorDetail:
      type: object
      properties:
        code:
          type: string
          description: A server-defined code that uniquely identifies the error.
        message:
          type: string
          description: A human-readable representation of the error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-typespec-name: ErrorDetail[]
          description: >-
            An array of details about specific errors that led to this reported
            error.
      description: Error details
      required:
        - code
        - message
    GroupCreateOrUpdate:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/RegistryResourceCreateOrUpdateItem'
          x-typespec-name: RegistryResource[]
      required:
        - resources
    GroupRead:
      type: object
      properties:
        id:
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/RegistryResourceReadItem'
          x-typespec-name: RegistryResource[]
      required:
        - id
        - resources
    GroupReadItem:
      type: object
      properties:
        id:
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/RegistryResourceReadItem'
          x-typespec-name: RegistryResource[]
      required:
        - id
        - resources
    RegistryMetadata:
      type: object
      properties:
        registryMetadata:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            tags:
              type: array
              items:
                $ref: '#/components/schemas/RegistryTag'
              x-typespec-name: RegistryTag[]
            groups:
              type: array
              items: {}
              x-typespec-name: '[CommonMetadata]'
          required:
            - name
            - description
            - tags
            - groups
          x-typespec-name: (anonymous model)
      required:
        - registryMetadata
    RegistryResource:
      type: object
      properties:
        name:
          type: string
          description: >-
            A human readable name of the entity. Note that implementations MAY
            choose to enforce constraints on this value. For example, they could
            mandate that id and name be the same value. How any such requirement
            is shared with all parties is out of scope of this specification.
        description:
          type: string
          description: A human readable summary of the purpose of the entity.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/RegistryTag'
          x-typespec-name: RegistryTag[]
          description: >-
            A mechanism in which additional metadata about the entity can be
            stored without changing the schema of the entity.
        version:
          type: integer
          format: int32
          description: >-
            A numeric value representing a specific instance of an entity. Note
            that versions of an entity can be modified without changing the
            version value. Often this value, or when a new version is created,
            is controlled by a user of the Registry.
        epoch:
          type: integer
          format: int64
          description: >-
            A numeric value used to determine whether an entity has been
            modified. Each time the associated entity is updated, this value
            MUST be set to a new value that is greater than the current one.
            Note that unlike version, this attribute is most often managed by
            the Registry itself. Additionally, if an entity is created that is
            based on another entity (e.g. a new version of an entity is
            created), then the new entity's `epoch` value can be reset (e.g. to
            zero) since the scope of its values is the entity.
        self:
          type: string
          format: uri
          description: >-
            A unique URL for the entity. The URL MUST be a combination of the
            base URL for the list of resources of this type of entity appended
            with the id of the entity.
        createdBy:
          type: string
          description: >-
            A reference to the user or component that was responsible for the
            creation of this entity. This specification makes no requirement on
            the semantics or syntax of this value.
        createdOn:
          type: string
          format: date-time
          description: The date/time of when the entity was created.
        modifiedBy:
          type: string
          description: >-
            A reference to the user or component that was responsible for the
            the latest update of this entity. This specification makes no
            requirement on the semantics or syntax of this value
        modifiedOn:
          type: string
          format: date-time
          description: The date/time of when the entity was last updated.
        docs:
          type: string
          description: >-
            A URI-Reference to additional documentation about this entity. This
            specification does not place any constraints on the data returned
            from an HTTP GET to this value.
    RegistryResourceCreateOrUpdateItem:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier of the entity.
        name:
          type: string
          description: >-
            A human readable name of the entity. Note that implementations MAY
            choose to enforce constraints on this value. For example, they could
            mandate that id and name be the same value. How any such requirement
            is shared with all parties is out of scope of this specification.
        description:
          type: string
          description: A human readable summary of the purpose of the entity.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/RegistryTag'
          x-typespec-name: RegistryTag[]
          description: >-
            A mechanism in which additional metadata about the entity can be
            stored without changing the schema of the entity.
        version:
          type: integer
          format: int32
          description: >-
            A numeric value representing a specific instance of an entity. Note
            that versions of an entity can be modified without changing the
            version value. Often this value, or when a new version is created,
            is controlled by a user of the Registry.
        epoch:
          type: integer
          format: int64
          description: >-
            A numeric value used to determine whether an entity has been
            modified. Each time the associated entity is updated, this value
            MUST be set to a new value that is greater than the current one.
            Note that unlike version, this attribute is most often managed by
            the Registry itself. Additionally, if an entity is created that is
            based on another entity (e.g. a new version of an entity is
            created), then the new entity's `epoch` value can be reset (e.g. to
            zero) since the scope of its values is the entity.
        self:
          type: string
          format: uri
          description: >-
            A unique URL for the entity. The URL MUST be a combination of the
            base URL for the list of resources of this type of entity appended
            with the id of the entity.
        createdBy:
          type: string
          description: >-
            A reference to the user or component that was responsible for the
            creation of this entity. This specification makes no requirement on
            the semantics or syntax of this value.
        createdOn:
          type: string
          format: date-time
          description: The date/time of when the entity was created.
        modifiedBy:
          type: string
          description: >-
            A reference to the user or component that was responsible for the
            the latest update of this entity. This specification makes no
            requirement on the semantics or syntax of this value
        modifiedOn:
          type: string
          format: date-time
          description: The date/time of when the entity was last updated.
        docs:
          type: string
          description: >-
            A URI-Reference to additional documentation about this entity. This
            specification does not place any constraints on the data returned
            from an HTTP GET to this value.
      required:
        - id
    RegistryResourceRead:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier of the entity.
        name:
          type: string
          description: >-
            A human readable name of the entity. Note that implementations MAY
            choose to enforce constraints on this value. For example, they could
            mandate that id and name be the same value. How any such requirement
            is shared with all parties is out of scope of this specification.
        description:
          type: string
          description: A human readable summary of the purpose of the entity.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/RegistryTag'
          x-typespec-name: RegistryTag[]
          description: >-
            A mechanism in which additional metadata about the entity can be
            stored without changing the schema of the entity.
        version:
          type: integer
          format: int32
          description: >-
            A numeric value representing a specific instance of an entity. Note
            that versions of an entity can be modified without changing the
            version value. Often this value, or when a new version is created,
            is controlled by a user of the Registry.
        epoch:
          type: integer
          format: int64
          description: >-
            A numeric value used to determine whether an entity has been
            modified. Each time the associated entity is updated, this value
            MUST be set to a new value that is greater than the current one.
            Note that unlike version, this attribute is most often managed by
            the Registry itself. Additionally, if an entity is created that is
            based on another entity (e.g. a new version of an entity is
            created), then the new entity's `epoch` value can be reset (e.g. to
            zero) since the scope of its values is the entity.
        self:
          type: string
          format: uri
          description: >-
            A unique URL for the entity. The URL MUST be a combination of the
            base URL for the list of resources of this type of entity appended
            with the id of the entity.
        createdBy:
          type: string
          description: >-
            A reference to the user or component that was responsible for the
            creation of this entity. This specification makes no requirement on
            the semantics or syntax of this value.
        createdOn:
          type: string
          format: date-time
          description: The date/time of when the entity was created.
        modifiedBy:
          type: string
          description: >-
            A reference to the user or component that was responsible for the
            the latest update of this entity. This specification makes no
            requirement on the semantics or syntax of this value
        modifiedOn:
          type: string
          format: date-time
          description: The date/time of when the entity was last updated.
        docs:
          type: string
          description: >-
            A URI-Reference to additional documentation about this entity. This
            specification does not place any constraints on the data returned
            from an HTTP GET to this value.
      required:
        - id
    RegistryResourceReadItem:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier of the entity.
        name:
          type: string
          description: >-
            A human readable name of the entity. Note that implementations MAY
            choose to enforce constraints on this value. For example, they could
            mandate that id and name be the same value. How any such requirement
            is shared with all parties is out of scope of this specification.
        description:
          type: string
          description: A human readable summary of the purpose of the entity.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/RegistryTag'
          x-typespec-name: RegistryTag[]
          description: >-
            A mechanism in which additional metadata about the entity can be
            stored without changing the schema of the entity.
        version:
          type: integer
          format: int32
          description: >-
            A numeric value representing a specific instance of an entity. Note
            that versions of an entity can be modified without changing the
            version value. Often this value, or when a new version is created,
            is controlled by a user of the Registry.
        epoch:
          type: integer
          format: int64
          description: >-
            A numeric value used to determine whether an entity has been
            modified. Each time the associated entity is updated, this value
            MUST be set to a new value that is greater than the current one.
            Note that unlike version, this attribute is most often managed by
            the Registry itself. Additionally, if an entity is created that is
            based on another entity (e.g. a new version of an entity is
            created), then the new entity's `epoch` value can be reset (e.g. to
            zero) since the scope of its values is the entity.
        self:
          type: string
          format: uri
          description: >-
            A unique URL for the entity. The URL MUST be a combination of the
            base URL for the list of resources of this type of entity appended
            with the id of the entity.
        createdBy:
          type: string
          description: >-
            A reference to the user or component that was responsible for the
            creation of this entity. This specification makes no requirement on
            the semantics or syntax of this value.
        createdOn:
          type: string
          format: date-time
          description: The date/time of when the entity was created.
        modifiedBy:
          type: string
          description: >-
            A reference to the user or component that was responsible for the
            the latest update of this entity. This specification makes no
            requirement on the semantics or syntax of this value
        modifiedOn:
          type: string
          format: date-time
          description: The date/time of when the entity was last updated.
        docs:
          type: string
          description: >-
            A URI-Reference to additional documentation about this entity. This
            specification does not place any constraints on the data returned
            from an HTTP GET to this value.
      required:
        - id
    RegistryResourceUpdateItem:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier of the entity.
        name:
          type: string
          description: >-
            A human readable name of the entity. Note that implementations MAY
            choose to enforce constraints on this value. For example, they could
            mandate that id and name be the same value. How any such requirement
            is shared with all parties is out of scope of this specification.
        description:
          type: string
          description: A human readable summary of the purpose of the entity.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/RegistryTag'
          x-typespec-name: RegistryTag[]
          description: >-
            A mechanism in which additional metadata about the entity can be
            stored without changing the schema of the entity.
        version:
          type: integer
          format: int32
          description: >-
            A numeric value representing a specific instance of an entity. Note
            that versions of an entity can be modified without changing the
            version value. Often this value, or when a new version is created,
            is controlled by a user of the Registry.
        epoch:
          type: integer
          format: int64
          description: >-
            A numeric value used to determine whether an entity has been
            modified. Each time the associated entity is updated, this value
            MUST be set to a new value that is greater than the current one.
            Note that unlike version, this attribute is most often managed by
            the Registry itself. Additionally, if an entity is created that is
            based on another entity (e.g. a new version of an entity is
            created), then the new entity's `epoch` value can be reset (e.g. to
            zero) since the scope of its values is the entity.
        self:
          type: string
          format: uri
          description: >-
            A unique URL for the entity. The URL MUST be a combination of the
            base URL for the list of resources of this type of entity appended
            with the id of the entity.
        createdBy:
          type: string
          description: >-
            A reference to the user or component that was responsible for the
            creation of this entity. This specification makes no requirement on
            the semantics or syntax of this value.
        createdOn:
          type: string
          format: date-time
          description: The date/time of when the entity was created.
        modifiedBy:
          type: string
          description: >-
            A reference to the user or component that was responsible for the
            the latest update of this entity. This specification makes no
            requirement on the semantics or syntax of this value
        modifiedOn:
          type: string
          format: date-time
          description: The date/time of when the entity was last updated.
        docs:
          type: string
          description: >-
            A URI-Reference to additional documentation about this entity. This
            specification does not place any constraints on the data returned
            from an HTTP GET to this value.
      required:
        - id
    RegistryTag:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      required:
        - key
        - value
servers:
  - url: https://xregistry.example/
    description: Actual server to be set during client setup
    variables: {}
